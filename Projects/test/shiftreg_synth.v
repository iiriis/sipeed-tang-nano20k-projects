/* Generated by Yosys 0.44+4 (git sha1 77b2ae2e3, x86_64-w64-mingw32-g++ 13.2.1 -O3) */

(* src = "test.v:47.1-71.10" *)
module LFSR(DATA, clk, reset);
  (* src = "test.v:57.1-69.4" *)
  wire [5:0] _0_;
  (* src = "test.v:48.22-48.26" *)
  output [5:0] DATA;
  reg [5:0] DATA;
  (* src = "test.v:49.16-49.19" *)
  input clk;
  wire clk;
  (* src = "test.v:50.16-50.21" *)
  input reset;
  wire reset;
  assign _0_[1] = DATA[5] ^ DATA[0];
  assign _0_[2] = DATA[1] ^ DATA[5];
  assign _0_[5] = DATA[4] ^ DATA[5];
  (* src = "test.v:57.1-69.4" *)
  always @(posedge clk, posedge reset)
    if (reset) DATA[0] <= 1'h1;
    else DATA[0] <= DATA[5];
  (* src = "test.v:57.1-69.4" *)
  always @(posedge clk, posedge reset)
    if (reset) DATA[1] <= 1'h0;
    else DATA[1] <= _0_[1];
  (* src = "test.v:57.1-69.4" *)
  always @(posedge clk, posedge reset)
    if (reset) DATA[2] <= 1'h1;
    else DATA[2] <= _0_[2];
  (* src = "test.v:57.1-69.4" *)
  always @(posedge clk, posedge reset)
    if (reset) DATA[3] <= 1'h1;
    else DATA[3] <= DATA[2];
  (* src = "test.v:57.1-69.4" *)
  always @(posedge clk, posedge reset)
    if (reset) DATA[4] <= 1'h0;
    else DATA[4] <= DATA[3];
  (* src = "test.v:57.1-69.4" *)
  always @(posedge clk, posedge reset)
    if (reset) DATA[5] <= 1'h1;
    else DATA[5] <= _0_[5];
  assign { _0_[4:3], _0_[0] } = { DATA[3:2], DATA[5] };
endmodule

(* top =  1  *)
(* src = "test.v:1.1-31.10" *)
module top(btn1, btn2, led);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  (* src = "test.v:17.26-17.36" *)
  wire _083_;
  (* force_downto = 32'd1 *)
  (* src = "test.v:15.18-15.27|D:\\FPGA_Projects\\Toolchains\\oss-cad-suite\\bin\\../share/yosys/techmap.v:270.23-270.24" *)
  wire [31:0] _084_;
  (* force_downto = 32'd1 *)
  (* src = "test.v:15.18-15.27|D:\\FPGA_Projects\\Toolchains\\oss-cad-suite\\bin\\../share/yosys/techmap.v:270.26-270.27" *)
  wire [31:0] _085_;
  (* src = "test.v:2.16-2.20" *)
  input btn1;
  wire btn1;
  (* src = "test.v:3.16-3.20" *)
  input btn2;
  wire btn2;
  (* src = "test.v:10.9-10.18" *)
  reg clock_div;
  (* src = "test.v:11.13-11.18" *)
  reg [31:0] count;
  (* src = "test.v:4.23-4.26" *)
  output [5:0] led;
  wire [5:0] led;
  (* src = "test.v:8.16-8.27" *)
  wire [5:0] shifted_led;
  assign _063_ = count[1] | count[0];
  assign _064_ = count[3] | count[2];
  assign _065_ = ~(_064_ | _063_);
  assign _066_ = count[5] & ~(count[4]);
  assign _067_ = count[6] | ~(count[7]);
  assign _068_ = _067_ | ~(_066_);
  assign _069_ = _068_ | ~(_065_);
  assign _070_ = ~(count[9] & count[8]);
  assign _071_ = count[11] | ~(count[10]);
  assign _072_ = ~(_071_ | _070_);
  assign _073_ = count[13] & count[12];
  assign _074_ = count[15] | count[14];
  assign _075_ = _074_ | ~(_073_);
  assign _076_ = _075_ | ~(_072_);
  assign _077_ = ~(_076_ | _069_);
  assign _078_ = ~(count[17] | count[16]);
  assign _079_ = count[19] | count[18];
  assign _080_ = _079_ | ~(_078_);
  assign _081_ = count[21] & ~(count[20]);
  assign _082_ = count[22] | ~(count[23]);
  assign _001_ = _082_ | ~(_081_);
  assign _002_ = ~(_001_ | _080_);
  assign _003_ = count[25] | count[24];
  assign _004_ = count[27] | count[26];
  assign _005_ = ~(_004_ | _003_);
  assign _006_ = ~(count[29] | count[28]);
  assign _007_ = count[31] | count[30];
  assign _008_ = _007_ | ~(_006_);
  assign _009_ = _008_ | ~(_005_);
  assign _010_ = _009_ | ~(_002_);
  assign _000_ = _010_ | ~(_077_);
  assign _083_ = ~clock_div;
  assign led[0] = ~shifted_led[0];
  assign led[1] = ~shifted_led[1];
  assign led[2] = ~shifted_led[2];
  assign led[3] = ~shifted_led[3];
  assign led[4] = ~shifted_led[4];
  assign led[5] = ~shifted_led[5];
  assign _084_[0] = ~count[0];
  assign _085_[1] = count[1] ^ count[0];
  assign _011_ = ~(count[1] & count[0]);
  assign _085_[2] = ~(_011_ ^ count[2]);
  assign _012_ = _011_ | ~(count[2]);
  assign _085_[3] = ~(_012_ ^ count[3]);
  assign _013_ = ~(count[3] & count[2]);
  assign _014_ = ~(_013_ | _011_);
  assign _085_[4] = _014_ ^ count[4];
  assign _015_ = ~(_014_ & count[4]);
  assign _085_[5] = ~(_015_ ^ count[5]);
  assign _016_ = count[5] & count[4];
  assign _017_ = ~(_016_ & _014_);
  assign _085_[6] = ~(_017_ ^ count[6]);
  assign _018_ = _017_ | ~(count[6]);
  assign _085_[7] = ~(_018_ ^ count[7]);
  assign _019_ = ~(count[7] & count[6]);
  assign _020_ = _019_ | ~(_016_);
  assign _021_ = _020_ | ~(_014_);
  assign _085_[8] = ~(_021_ ^ count[8]);
  assign _022_ = _021_ | ~(count[8]);
  assign _085_[9] = ~(_022_ ^ count[9]);
  assign _023_ = _021_ | _070_;
  assign _085_[10] = ~(_023_ ^ count[10]);
  assign _024_ = _023_ | ~(count[10]);
  assign _085_[11] = ~(_024_ ^ count[11]);
  assign _025_ = ~(count[10] & count[11]);
  assign _026_ = _025_ | _070_;
  assign _027_ = _026_ | _021_;
  assign _085_[12] = ~(_027_ ^ count[12]);
  assign _028_ = _027_ | ~(count[12]);
  assign _085_[13] = ~(_028_ ^ count[13]);
  assign _029_ = _027_ | ~(_073_);
  assign _085_[14] = ~(_029_ ^ count[14]);
  assign _030_ = _029_ | ~(count[14]);
  assign _085_[15] = ~(_030_ ^ count[15]);
  assign _031_ = ~(count[15] & count[14]);
  assign _032_ = _031_ | ~(_073_);
  assign _033_ = _032_ | _026_;
  assign _034_ = _033_ | _021_;
  assign _085_[16] = ~(_034_ ^ count[16]);
  assign _035_ = _034_ | ~(count[16]);
  assign _085_[17] = ~(_035_ ^ count[17]);
  assign _036_ = ~(_033_ | _021_);
  assign _037_ = ~(count[17] & count[16]);
  assign _038_ = _037_ | ~(_036_);
  assign _085_[18] = ~(_038_ ^ count[18]);
  assign _039_ = _038_ | ~(count[18]);
  assign _085_[19] = ~(_039_ ^ count[19]);
  assign _040_ = ~(count[19] & count[18]);
  assign _041_ = _040_ | _037_;
  assign _042_ = ~(_041_ | _034_);
  assign _085_[20] = _042_ ^ count[20];
  assign _043_ = ~(_042_ & count[20]);
  assign _085_[21] = ~(_043_ ^ count[21]);
  assign _044_ = count[21] & count[20];
  assign _045_ = ~(_044_ & _042_);
  assign _085_[22] = ~(_045_ ^ count[22]);
  assign _046_ = _045_ | ~(count[22]);
  assign _085_[23] = ~(_046_ ^ count[23]);
  assign _047_ = ~(count[23] & count[22]);
  assign _048_ = _047_ | ~(_044_);
  assign _049_ = _048_ | _041_;
  assign _050_ = _049_ | ~(_036_);
  assign _085_[24] = ~(_050_ ^ count[24]);
  assign _051_ = _050_ | ~(count[24]);
  assign _085_[25] = ~(_051_ ^ count[25]);
  assign _052_ = ~(_049_ | _034_);
  assign _053_ = count[25] & count[24];
  assign _054_ = ~(_053_ & _052_);
  assign _085_[26] = ~(_054_ ^ count[26]);
  assign _055_ = _054_ | ~(count[26]);
  assign _085_[27] = ~(_055_ ^ count[27]);
  assign _056_ = ~(count[27] & count[26]);
  assign _057_ = _056_ | ~(_053_);
  assign _058_ = _057_ | ~(_052_);
  assign _085_[28] = ~(_058_ ^ count[28]);
  assign _059_ = _058_ | ~(count[28]);
  assign _085_[29] = ~(_059_ ^ count[29]);
  assign _060_ = ~(count[29] & count[28]);
  assign _061_ = _060_ | _058_;
  assign _085_[30] = ~(_061_ ^ count[30]);
  assign _062_ = _061_ | ~(count[30]);
  assign _085_[31] = ~(_062_ ^ count[31]);
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[0] <= 1'h0;
    else count[0] <= _084_[0];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[1] <= 1'h0;
    else count[1] <= _085_[1];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[2] <= 1'h0;
    else count[2] <= _085_[2];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[3] <= 1'h0;
    else count[3] <= _085_[3];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[4] <= 1'h0;
    else count[4] <= _085_[4];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[5] <= 1'h0;
    else count[5] <= _085_[5];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[6] <= 1'h0;
    else count[6] <= _085_[6];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[7] <= 1'h0;
    else count[7] <= _085_[7];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[8] <= 1'h0;
    else count[8] <= _085_[8];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[9] <= 1'h0;
    else count[9] <= _085_[9];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[10] <= 1'h0;
    else count[10] <= _085_[10];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[11] <= 1'h0;
    else count[11] <= _085_[11];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[12] <= 1'h0;
    else count[12] <= _085_[12];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[13] <= 1'h0;
    else count[13] <= _085_[13];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[14] <= 1'h0;
    else count[14] <= _085_[14];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[15] <= 1'h0;
    else count[15] <= _085_[15];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[16] <= 1'h0;
    else count[16] <= _085_[16];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[17] <= 1'h0;
    else count[17] <= _085_[17];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[18] <= 1'h0;
    else count[18] <= _085_[18];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[19] <= 1'h0;
    else count[19] <= _085_[19];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[20] <= 1'h0;
    else count[20] <= _085_[20];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[21] <= 1'h0;
    else count[21] <= _085_[21];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[22] <= 1'h0;
    else count[22] <= _085_[22];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[23] <= 1'h0;
    else count[23] <= _085_[23];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[24] <= 1'h0;
    else count[24] <= _085_[24];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[25] <= 1'h0;
    else count[25] <= _085_[25];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[26] <= 1'h0;
    else count[26] <= _085_[26];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[27] <= 1'h0;
    else count[27] <= _085_[27];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[28] <= 1'h0;
    else count[28] <= _085_[28];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[29] <= 1'h0;
    else count[29] <= _085_[29];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[30] <= 1'h0;
    else count[30] <= _085_[30];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) count[31] <= 1'h0;
    else count[31] <= _085_[31];
  (* src = "test.v:14.5-20.8" *)
  always @(posedge btn2)
    if (!_000_) clock_div <= _083_;
  (* module_not_derived = 32'd1 *)
  (* src = "test.v:22.10-26.6" *)
  LFSR lfsr1 (
    .DATA(shifted_led),
    .clk(clock_div),
    .reset(btn1)
  );
  assign _084_[31:1] = count[31:1];
  assign _085_[0] = _084_[0];
endmodule
